---
import { type CollectionEntry, getCollection, render } from 'astro:content';
import CasePreview from '../../components/CasePreview.astro';
import BaseLayout from '../../layouts/BaseLayout.astro';
import { sortItemsByDateDesc } from '../../utils/data-utils';

export async function getStaticPaths() {
    const cases = (await getCollection('cases')).sort(sortItemsByDateDesc);
    const caseCount = cases.length;
    return cases.map((currentCase, index) => ({
        params: { id: currentCase.id },
        props: {
            case: currentCase,
            prevCase: index + 1 !== caseCount ? cases[index + 1] : null,
            nextCase: index !== 0 ? cases[index - 1] : null
        }
    }));
}

type Props = {
    case: CollectionEntry<'cases'>;
    prevCase: CollectionEntry<'cases'>;
    nextCase: CollectionEntry<'cases'>;
};

const { case: currentCase, prevCase, nextCase } = Astro.props;
const { title, description, seo } = currentCase.data;
const { Content } = await render(currentCase);
---

<BaseLayout title={seo?.title ?? title} description={seo?.description ?? description} image={seo?.image} pageType="article" showHeader={false}>
    <article class="mb-16 sm:mb-24">
        <header class="mb-8">
            <h1 class="text-3xl leading-tight font-serif font-medium sm:text-5xl sm:leading-tight">{title}</h1>
        </header>
        <div class="max-w-none prose sm:prose-lg">
            <Content />
        </div>
    </article>
    {
        (prevCase || nextCase) && (
            <div class="my-16 sm:my-24">
                <h2 class="mb-12 text-xl font-serif italic sm:mb-16 sm:text-2xl">Смотреть далее</h2>
                {nextCase && <CasePreview case={nextCase} class="mb-10 sm:mb-12" headingLevel="h3" />}
                {prevCase && <CasePreview case={prevCase} class="mb-10 sm:mb-12" headingLevel="h3" />}
            </div>
        )
    }
</BaseLayout>